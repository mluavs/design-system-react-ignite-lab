{"version":3,"file":"Button.stories.35bd935d.js","sources":["../../src/components/Button.tsx"],"sourcesContent":["import { clsx } from 'clsx';\nimport { Slot } from '@radix-ui/react-slot';\nimport { ButtonHTMLAttributes, HTMLAttributes, ReactNode } from 'react';\n\n/*\nQuando a gente usa o Slot do Radix, ele pega todas as propriedades que a gente tá recebendo no componente Slot e repassa pro primeiro componente que vem dentro do children, no nosso caso, é o <p>. Em síntese, ele permite que o dev escolha qual a melhor tag e não fique preso a uma específica\n*/\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    children: ReactNode;\n    asChild?: boolean; \n}\n\nexport function Button({ children, asChild, className, ...props }: ButtonProps) {\n    const Comp = asChild ? Slot : 'button';\n\n    return (\n        <Comp \n        className={clsx(\n            'py-3 px-4 bg-cyan-500 rounded font-semibold text-black text-sm w-full transition-colors hover:bg-cyan-300 focus:ring-2 ring-white', className, \n    )}\n        {...props}\n        >\n            {children}\n            </Comp>\n    )\n}"],"names":["Button","children","asChild","className","_jsx","Slot","clsx","props","__name"],"mappings":"8QAaO,SAAAA,EAAA,CAAgB,SAAAC,EAAEA,QAAAA,EAAUC,UAAAA,KAASC,CAAiC,EAAA,CAGzE,OAAAC,EAFAF,EAAAG,EAAA,SAEA,CACS,UAAAC,EAAA,oIAAAH,CAAA,EAE6I,GAAAI,EAE9IA,SAAAA,CAAK,CAAA,CAKjB,CAbOC,EAAAR,EAAA"}