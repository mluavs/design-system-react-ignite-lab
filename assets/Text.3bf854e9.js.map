{"version":3,"file":"Text.3bf854e9.js","sources":["../../src/components/Text.tsx"],"sourcesContent":["import { clsx } from 'clsx';\nimport { Slot } from '@radix-ui/react-slot';\nimport { ReactNode } from 'react';\n\n/*\nQuando a gente usa o Slot do Radix, ele pega todas as propriedades que a gente tá recebendo no componente Slot e repassa pro primeiro componente que vem dentro do children, no nosso caso, é o <p>. Em síntese, ele permite que o dev escolha qual a melhor tag e não fique preso a uma específica\n*/\n\nexport interface TextProps {\n    size?: 'sm' | 'md' | 'lg';\n    children: ReactNode;\n    asChild?: boolean; \n    className?: string;\n}\n\nexport function Text({size = 'md', children, asChild, className }: TextProps) {\n    const Comp = asChild ? Slot : 'span';\n\n    return (\n        <Comp className={clsx('text-gray-100 font-sans', \n        {\n            'text-xs': size === 'sm',\n            'text-sm': size === 'md',\n            'text-md': size === 'lg',\n        },\n        className,\n    )}\n        >\n            {children}\n            </Comp>\n    )\n}"],"names":["Text","size","children","asChild","_jsx","Slot","clsx","className","__name"],"mappings":"qNAeO,SAAAA,EAAA,CAAc,KAAAC,EAAA,KAAQ,SAAAC,EAAMA,QAAAA,EAAUC,UAAAA,CAA8B,EAAA,CAGvE,OAAAC,EAFAD,EAAAE,EAAA,OAEA,CACS,UAAAC,EAAA,0BAAA,CACL,UAAAL,IAAA,KACwB,UAAAA,IAAA,KACA,UAAAA,IAAA,IACA,EAAAM,CAAA,EAEf,SAAAL,CACX,CAAA,CAKN,CAhBOM,EAAAR,EAAA"}